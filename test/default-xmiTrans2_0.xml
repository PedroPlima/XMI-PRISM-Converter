<?xml version="1.0"?>
<!DOCTYPE xmitransformations SYSTEM 'xmitrans.dtd'>

<!-- xmiTrans2_0.xml

XMI transformations for the SDMetrics V2.3 default metamodel
for UML2.x and XMI 2.x source files.

Copyright (c) 2002-2013 Juergen Wuest

The MIT License

Permission is hereby granted, free of charge, to any person obtaining a copy
of this SDMetrics project file (the "Project File"), to deal in the Project File 
without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Project File, and to permit persons to whom the Project File is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Project File.

THE PROJECT FILE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE PROJECT FILE.

Note: this license grant only applies to this Project File, and not to any
other part of SDMetrics.

-->

<xmitransformations version="2.0">


<!-- base element -->
<xmitransformation modelelement="sdmetricsbase" xmipattern="sdmetricsbase" recurse="true">
<trigger name="id" type="attrval" attr="xmi:id" />
<trigger name="name" type="attrval" attr="name" />
<trigger name="comments" type="xmi2assoc" attr="ownedComment" src="uml:Comment" />
</xmitransformation>

<!-- activities -->

<xmitransformation modelelement="activity" xmipattern="UML:ActivityGraph" recurse="true">

<!-- tentativa de pegar id -->
<trigger name="id" type="attrval" attr="xmi.id"/>

<trigger name="nodes" type="xmi2assoc" attr="node" />
<trigger name="edges" type="xmi2assoc" attr="edge" />
<trigger name="groups" type="xmi2assoc" attr="group" />
</xmitransformation>

<xmitransformation modelelement="sdmetricsabstractactivitygroup" xmipattern="sdmetricsabstractactivitygroup" recurse="true">
<trigger name="nodes" type="xmi2assoc" attr="containedNode" /><!-- UML 2.0 -->
<trigger name="edges" type="xmi2assoc" attr="containedEdge" />
<trigger name="nodes" type="xmi2assoc" attr="node" /><!-- UML 2.1 -->
<trigger name="edges" type="xmi2assoc" attr="edge" />
<trigger name="groups" type="xmi2assoc" attr="subgroup" /><!-- UML 2.0 -->
<trigger name="groups" type="xmi2assoc" attr="subpartition" /><!-- UML 2.1 -->
<trigger name="groups" type="xmi2assoc" attr="subPartition" /><!-- Altova UModel 2007 -->
<trigger name="handlers" type="xmi2assoc" attr="handler"  src="uml:ExceptionHandler"/>
<trigger name="pins" type="xmi2assoc" attr="input" src="uml:InputPin" />
<trigger name="pins" type="xmi2assoc" attr="output" src="uml:OutputPin" />
</xmitransformation>

<xmitransformation modelelement="activitygroup" xmipattern="uml:ActivityPartition" recurse="true">
<trigger name="groups" type="xmi2assoc" attr="subgroup" src="uml:ActivityPartition" />
<trigger name="kind" type="constant" attr="partition" />
</xmitransformation>
<xmitransformation modelelement="activitygroup" xmipattern="uml:StructuredActivityNode" recurse="true">
<trigger name="kind" type="constant" attr="structured" />
</xmitransformation>
<xmitransformation modelelement="activitygroup" xmipattern="uml:ConditionalNode" recurse="true">
<trigger name="kind" type="constant" attr="conditional" />
<trigger name="pins" type="xmi2assoc" attr="result" />
</xmitransformation>
<xmitransformation modelelement="activitygroup" xmipattern="uml:LoopNode" recurse="true">
<trigger name="kind" type="constant" attr="loop" />
<trigger name="pins" type="xmi2assoc" attr="result" />
<trigger name="pins" type="xmi2assoc" attr="loopVariableInput" />
<trigger name="pins" type="xmi2assoc" attr="loopVariable" />
</xmitransformation>
<xmitransformation modelelement="activitygroup" xmipattern="uml:SequenceNode" recurse="true">
<trigger name="kind" type="constant" attr="sequence" />
</xmitransformation>
<xmitransformation modelelement="activitygroup" xmipattern="uml:InterruptibleActivityRegion" recurse="true">
<trigger name="kind" type="constant" attr="interruptible" />
</xmitransformation>
<xmitransformation modelelement="activitygroup" xmipattern="uml:ExpansionRegion" recurse="true">
<trigger name="kind" type="constant" attr="expansion" />
<trigger name="nodes" type="xmi2assoc" attr="inputElement" />
<trigger name="nodes" type="xmi2assoc" attr="outputElement" />
</xmitransformation>

<xmitransformation modelelement="controlflow" xmipattern="UML:Transition" recurse="true">
<trigger name="id" type="attrval" attr="xmi.id"/>
<trigger name="source" type="xmi2assoc" attr="source" />
<trigger name="target" type="xmi2assoc" attr="target" />
<trigger name="guard" type="xmi2assoc" attr="guard" />
<trigger name="probability" type="gcattrval" src="UML:ModelElement.taggedValue" attr="value" />
</xmitransformation>

<xmitransformation modelelement="objectflow" xmipattern="uml:ObjectFlow" recurse="true">
<trigger name="source" type="xmi2assoc" attr="source" />
<trigger name="target" type="xmi2assoc" attr="target" />
<trigger name="guard" type="xmi2assoc" attr="guard" />
</xmitransformation>

<!-- Initial state -->
<xmitransformation modelelement="controlnode" xmipattern="UML:Pseudostate" recurse="true">
<trigger name="id" type="attrval" attr="xmi.id"/>
<trigger name="kind" type="constant" attr="initial" />
</xmitransformation>

<!-- Initial state -->
<xmitransformation modelelement="controlnode" xmipattern="UML:FinalState" recurse="true">
<trigger name="id" type="attrval" attr="xmi.id"/>
<trigger name="kind" type="constant" attr="activityfinal" />
</xmitransformation>

<xmitransformation modelelement="controlnode" xmipattern="uml:FlowFinalNode" recurse="true">
<trigger name="kind" type="constant" attr="flowfinal" />
</xmitransformation>

<xmitransformation modelelement="controlnode" xmipattern="uml:JoinNode" recurse="true">
<trigger name="kind" type="constant" attr="join" />
</xmitransformation>

<xmitransformation modelelement="controlnode" xmipattern="uml:ForkNode" recurse="true">
<trigger name="kind" type="constant" attr="fork" />
</xmitransformation>

<xmitransformation modelelement="controlnode" xmipattern="uml:DecisionNode" recurse="true">
<trigger name="kind" type="constant" attr="decision" />
</xmitransformation>

<xmitransformation modelelement="controlnode" xmipattern="uml:MergeNode" recurse="true">
<trigger name="kind" type="constant" attr="merge" />
</xmitransformation>

<xmitransformation modelelement="objectnode" xmipattern="uml:CentralBufferNode" recurse="true">
<trigger name="kind" type="constant" attr="centralbuffer" />
</xmitransformation>

<xmitransformation modelelement="objectnode" xmipattern="uml:DataStoreNode" recurse="true">
<trigger name="kind" type="constant" attr="datastore" />
</xmitransformation>

<xmitransformation modelelement="objectnode" xmipattern="uml:ActivityParameterNode" recurse="true">
<trigger name="kind" type="constant" attr="activityparameter" />
</xmitransformation>

<xmitransformation modelelement="objectnode" xmipattern="uml:ExpansionNode" recurse="true">
<trigger name="kind" type="constant" attr="expansion" />
</xmitransformation>

<!-- abstract action, covers frequently used types of input and output pins -->
<xmitransformation modelelement="sdmetricsabstractaction" xmipattern="sdmetricsabstractaction">
<trigger name="inputs" type="xmi2assoc" attr="input" src="uml:InputPin" />
<trigger name="outputs" type="xmi2assoc" attr="output" src="uml:OutputPin" />
<trigger name="inputs" type="xmi2assoc" attr="inputValue" src="uml:InputPin" /><!-- UML 2.1 -->
<trigger name="outputs" type="xmi2assoc" attr="outputValue" src="uml:OutputPin" /><!-- UML 2.1 -->
<trigger name="inputs" type="xmi2assoc" attr="argument" src="uml:InputPin" />
<trigger name="inputs" type="xmi2assoc" attr="target" src="uml:InputPin" />
<trigger name="inputs" type="xmi2assoc" attr="object" src="uml:InputPin" />
<trigger name="outputs" type="xmi2assoc" attr="result" src="uml:OutputPin" />
<trigger name="handlers" type="xmi2assoc" attr="handler" src="uml:ExceptionHandler"/>
</xmitransformation>

<xmitransformation modelelement="action" xmipattern="UML:ActionState" recurse="true">
<trigger name="kind" type="constant" attr="opaque"/>
<trigger name="id" type="attrval" attr="xmi.id" />
</xmitransformation>

<xmitransformation modelelement="action" xmipattern="uml:CallOperationAction" recurse="true">
<trigger name="kind" type="constant" attr="calloperation"/>
</xmitransformation>

<xmitransformation modelelement="action" xmipattern="uml:CallBehaviorAction" recurse="true">
<trigger name="kind" type="constant" attr="callbehavior"/>
</xmitransformation>

<xmitransformation modelelement="action" xmipattern="uml:SendSignalAction" recurse="true">
<trigger name="kind" type="constant" attr="sendsignal"/>
</xmitransformation>

<xmitransformation modelelement="action" xmipattern="uml:BroadcastSignalAction" recurse="true">
<trigger name="kind" type="constant" attr="broadcastsignal"/>
</xmitransformation>

<xmitransformation modelelement="action" xmipattern="uml:SendObjectAction" recurse="true">
<trigger name="inputs" type="xmi2assoc" attr="request" src="uml:InputPin" />
<trigger name="kind" type="constant" attr="sendobject"/>
</xmitransformation>

<xmitransformation modelelement="action" xmipattern="uml:CreateObjectAction" recurse="true">
<trigger name="kind" type="constant" attr="createobject"/>
</xmitransformation>

<xmitransformation modelelement="action" xmipattern="uml:DestroyObjectAction" recurse="true">
<trigger name="kind" type="constant" attr="destroyobject"/>
</xmitransformation>

<xmitransformation modelelement="action" xmipattern="uml:TestIdentityAction" recurse="true">
<trigger name="inputs" type="xmi2assoc" attr="first" src="uml:InputPin" />
<trigger name="inputs" type="xmi2assoc" attr="second" src="uml:InputPin" />
<trigger name="kind" type="constant" attr="testidentity"/>
</xmitransformation>

<xmitransformation modelelement="action" xmipattern="uml:ReadSelfAction" recurse="true">
<trigger name="kind" type="constant" attr="readself"/>
</xmitransformation>

<xmitransformation modelelement="action" xmipattern="uml:ReadStructuralFeatureAction" recurse="true">
<trigger name="kind" type="constant" attr="readstructuralfeature"/>
</xmitransformation>
<xmitransformation modelelement="action" xmipattern="uml:AddStructuralFeatureValueAction" recurse="true">
<trigger name="inputs" type="xmi2assoc" attr="insertAt" src="uml:InputPin" />
<trigger name="inputs" type="xmi2assoc" attr="value" src="uml:InputPin" />
<trigger name="kind" type="constant" attr="addstructuralfeaturevalue"/>
</xmitransformation>
<xmitransformation modelelement="action" xmipattern="uml:RemoveStructuralFeatureValueAction" recurse="true">
<trigger name="inputs" type="xmi2assoc" attr="removeAt" src="uml:InputPin" />
<trigger name="inputs" type="xmi2assoc" attr="value" src="uml:InputPin" />
<trigger name="kind" type="constant" attr="removestructuralfeaturevalue"/>
</xmitransformation>
<xmitransformation modelelement="action" xmipattern="uml:ClearStructuralFeatureAction" recurse="true">
<trigger name="kind" type="constant" attr="clearstructuralfeature"/>
</xmitransformation>

<xmitransformation modelelement="action" xmipattern="uml:ReadLinkAction" recurse="true">
<trigger name="kind" type="constant" attr="readlink"/>
</xmitransformation>
<xmitransformation modelelement="action" xmipattern="uml:CreateLinkAction" recurse="true">
<trigger name="kind" type="constant" attr="createlink"/>
</xmitransformation>
<xmitransformation modelelement="action" xmipattern="uml:DestroyLinkAction" recurse="true">
<trigger name="kind" type="constant" attr="destroylink"/>
</xmitransformation>
<xmitransformation modelelement="action" xmipattern="uml:ClearAssociationAction" recurse="true">
<trigger name="kind" type="constant" attr="clearassociation"/>
</xmitransformation>

<xmitransformation modelelement="action" xmipattern="uml:ValueSpecificationAction" recurse="true">
<trigger name="kind" type="constant" attr="valuespecification"/>
</xmitransformation>

<xmitransformation modelelement="action" xmipattern="uml:AcceptEventAction" recurse="true">
<trigger name="kind" type="constant" attr="acceptevent"/>
</xmitransformation>
<xmitransformation modelelement="action" xmipattern="uml:AcceptCallAction" recurse="true">
<trigger name="outputs" type="xmi2assoc" attr="returnInformation" src="uml:OutputPin" />
<trigger name="kind" type="constant" attr="acceptcall"/>
</xmitransformation>
<xmitransformation modelelement="action" xmipattern="uml:ReplyAction" recurse="true">
<trigger name="inputs" type="xmi2assoc" attr="returnInformation" src="uml:InputPin" />
<trigger name="inputs" type="xmi2assoc" attr="replyValue" src="uml:InputPin" />
<trigger name="kind" type="constant" attr="replay"/>
</xmitransformation>
<xmitransformation modelelement="action" xmipattern="uml:UnmarshallAction" recurse="true">
<trigger name="inputs" type="xmi2assoc" attr="returnInformation" src="uml:InputPin" />
<trigger name="kind" type="constant" attr="unmarshall"/>
</xmitransformation>

<xmitransformation modelelement="action" xmipattern="uml:ReadExtentAction" recurse="true">
<trigger name="kind" type="constant" attr="readextent"/>
</xmitransformation>
<xmitransformation modelelement="action" xmipattern="uml:ReclassifyObjectAction" recurse="true">
<trigger name="kind" type="constant" attr="reclassifyobject"/>
</xmitransformation>
<xmitransformation modelelement="action" xmipattern="uml:ReadIsClassifiedObjectAction" recurse="true">
<trigger name="kind" type="constant" attr="readisclassifiedobject"/>
</xmitransformation>
<xmitransformation modelelement="action" xmipattern="uml:StartClassifierBehaviorAction" recurse="true">
<trigger name="kind" type="constant" attr="startclassifierbehavior"/>
</xmitransformation>

<xmitransformation modelelement="action" xmipattern="uml:StartObjectBehaviorAction" recurse="true"><!-- new in UML 2.2 -->
<trigger name="kind" type="constant" attr="startobjectbehavior"/>
</xmitransformation>

<xmitransformation modelelement="action" xmipattern="uml:ReadLinkObjectEndAction" recurse="true">
<trigger name="kind" type="constant" attr="readlinkobjectend"/>
</xmitransformation>
<xmitransformation modelelement="action" xmipattern="uml:ReadLinkObjectEndQualifierAction" recurse="true">
<trigger name="kind" type="constant" attr="readlinkobjectendqualifier"/>
</xmitransformation>
<xmitransformation modelelement="action" xmipattern="uml:CreateLinkObjectAction" recurse="true">
<trigger name="kind" type="constant" attr="createlinkobject"/>
</xmitransformation>

<xmitransformation modelelement="action" xmipattern="uml:ReadVariableAction" recurse="true">
<trigger name="kind" type="constant" attr="readvariable"/>
</xmitransformation>
<xmitransformation modelelement="action" xmipattern="uml:AddVariableValueAction" recurse="true">
<trigger name="inputs" type="xmi2assoc" attr="value" src="uml:InputPin" />
<trigger name="inputs" type="xmi2assoc" attr="insertAt" src="uml:InputPin" />
<trigger name="kind" type="constant" attr="addvariablevalue"/>
</xmitransformation>
<xmitransformation modelelement="action" xmipattern="uml:RemoveVariableValueAction" recurse="true">
<trigger name="inputs" type="xmi2assoc" attr="value" src="uml:InputPin" />
<trigger name="inputs" type="xmi2assoc" attr="removeAt" src="uml:InputPin" />
<trigger name="kind" type="constant" attr="removevariablevalue"/>
</xmitransformation>
<xmitransformation modelelement="action" xmipattern="uml:ClearVariableAction" recurse="true">
<trigger name="kind" type="constant" attr="clearvariable"/>
</xmitransformation>

<xmitransformation modelelement="action" xmipattern="uml:RaiseExceptionAction" recurse="true">
<trigger name="inputs" type="xmi2assoc" attr="exception" src="uml:InputPin" />
<trigger name="kind" type="constant" attr="raiseexception"/>
</xmitransformation>

<xmitransformation modelelement="action" xmipattern="uml:ReduceAction" recurse="true"><!-- new in UML 2.1 -->
<trigger name="kind" type="constant" attr="reduce"/>
<trigger name="inputs" type="xmi2assoc" attr="collection" src="uml:InputPin" />
</xmitransformation>

<!-- stereotypes, comments -->
<xmitransformation modelelement="stereotype" xmipattern="uml:Stereotype" />

<xmitransformation modelelement="comment" xmipattern="uml:Comment">
<trigger name="body" type="attrval" attr="body" />
<trigger name="body" type="ctext" src="body" />
</xmitransformation>

<!-- UML Diagram Information as saved by older versions of Rose, Together, Enterprise Architect,
	   Ideogramic UML, and possibly some more -->

<xmitransformation modelelement="diagram" xmipattern="Diagramming.Diagram" recurse="true">
	<trigger name="name" type="ctext" src="Diagramming.Diagram.name" />
	<trigger name="type" type="ctext" src="Diagramming.Diagram.diagramType" />
	<trigger name="context" type="gcattrval" src="Diagramming.Diagram.owner" attr="xmi.idref" />
</xmitransformation>

<xmitransformation modelelement="diagramelement" xmipattern="Diagramming.DiagramElement" recurse="false">
	<trigger name="element" type="gcattrval" src="Foundation.Core.PresentationElement.subject" attr="xmi.idref" />
</xmitransformation>


<!-- UML Diagram Information as saved by more current versions of 
     Rose, Together, Enterprise Architect -->

<xmitransformation modelelement="diagram" xmipattern="UML:Diagram" recurse="true">
	<trigger name="name" type="attrval" attr="name" />
	<trigger name="name" type="ctext" src="UML:Diagram.name" />
	<trigger name="type" type="attrval" attr="type" />
	<trigger name="type" type="attrval" attr="diagramType" />
	<trigger name="type" type="ctext" src="UML:Diagram.diagramType" />
	<trigger name="context" type="attrval" attr="owner" />
	<trigger name="context" type="gcattrval" src="UML:Diagram.owner" attr="xmi.idref" />
</xmitransformation>

<xmitransformation modelelement="diagramelement" xmipattern="UML:DiagramElement" recurse="false">
	<trigger name="element" type="attrval" attr="subject" />
	<trigger name="element" type="gcattrval" src="UML:DiagramElement.subject" attr="xmi.idref" />
</xmitransformation>



<!-- UML Diagram Information as saved by earlier versions of the 
     UIS Integrate Plus XMI exporter -->

<xmitransformation modelelement="diagram" xmipattern="UISDiagram" recurse="true">
	<trigger name="name" type="ctext" src="uisDiagramName" />
	<trigger name="type" type="ctext" src="uisDiagramStyle" />
</xmitransformation>

<xmitransformation modelelement="diagramelement" xmipattern="Foundation.Auxiliary_Elements.Presentation" recurse="false">
	<trigger name="element" type="gcattrval" src="Foundation.Auxiliary_Elements.Presentation.model" attr="xmi.idref" />
</xmitransformation>


<!-- UML Diagram Information as saved by NoMagic's MagicDraw XMI exporter -->

<xmitransformation modelelement="diagram" xmipattern="mdElement" condition="elementClass='DiagramData'" recurse="true">
	<trigger name="name" type="ctext" src="Foundation.Core.ModelElement.name" />
	<trigger name="name" type="attrval" attr="name" />
	<trigger name="type" type="ctext" src="type" />
	<trigger name="context" type="cattrval" src="parentID" attr="xmi.idref" />
</xmitransformation>

<xmitransformation modelelement="diagram" xmipattern="mdElement" condition="elementClass='DiagramPresentationElement'" recurse="true">
	<trigger name="name" type="attrval" attr="name" />
	<trigger name="type" type="ctext" src="type" />
	<trigger name="context" type="attrval" attr="ownerOfDiagram" />
</xmitransformation>


<xmitransformation modelelement="diagramelement" xmipattern="mdElement" condition="!(elementClass='DiagramView'|elementClass='DiagramPresentationElement'|elementClass='DiagramData'|elementClass='TextBoxView')" recurse="true">
	<trigger name="element" type="cattrval" src="elementID" attr="xmi.idref" />
	<trigger name="element" type="cattrval" src="elementID" attr="xmi:idref" />
</xmitransformation>

<!-- UML Diagram Information as saved by Embarcadero Describe (pre 6.0) -->

<xmitransformation modelelement="diagram" xmipattern="Diagram" recurse="true">
	<trigger name="name" type="attrval" attr="name" />
	<trigger name="type" type="attrval" attr="type" />
	<trigger name="context" type="attrval" attr="parent" />
</xmitransformation>


<xmitransformation modelelement="diagramelement" xmipattern="DrawObject">
	<trigger name="element" type="attrval" attr="reference" />
</xmitransformation>

<xmitransformation modelelement="diagramelement" xmipattern="DrawLine">
	<trigger name="element" type="attrval" attr="reference" />
</xmitransformation>




</xmitransformations>
